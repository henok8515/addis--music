{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const musicSlice = createSlice({\n  name: \"music\",\n  initialState: {\n    music: [],\n    isLoading: false\n  },\n  reducers: {\n    getMusicFetch: (state, action) => {\n      state.isLoading = true;\n    },\n    getMusicSuccess: (state, action) => {\n      state.isLoading = false;\n      state.music = action.payload;\n    },\n    deleteMusicSlice: (state, action) => {\n      console.log(state);\n      let f = state.tasks.splice(action.payload, 1);\n      console.log(f);\n      return state;\n    },\n    editMusicSlice: (state, action) => {\n      console.log(action.payload, \"edit\");\n      state = state.music.map(i => i.id === action.payload.id ? action.payload : i);\n      return state;\n    },\n    getMusicError: (state, action) => {\n      state.isLoading = false;\n    }\n  }\n});\nexport const {\n  getMusicFetch,\n  deleteMusicSlice,\n  editMusicSlice,\n  getMusicSuccess,\n  getMusicError\n} = musicSlice.actions;\nexport default musicSlice.reducer;","map":{"version":3,"names":["createSlice","current","musicSlice","name","initialState","music","isLoading","reducers","getMusicFetch","state","action","getMusicSuccess","payload","deleteMusicSlice","console","log","f","tasks","splice","editMusicSlice","map","i","id","getMusicError","actions","reducer"],"sources":["/home/henok/projects/addis-music/client/src/features/music/musicSlice.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const musicSlice = createSlice({\n  name: \"music\",\n  initialState: {\n    music: [],\n    isLoading: false,\n  },\n  reducers: {\n    getMusicFetch: (state, action) => {\n      state.isLoading = true;\n    },\n    getMusicSuccess: (state, action) => {\n      state.isLoading = false;\n      state.music = action.payload;\n    },\n    deleteMusicSlice: (state, action) => {\n      console.log(state);\n      let f = state.tasks.splice(action.payload, 1);\n      console.log(f);\n      return state;\n    },\n    editMusicSlice: (state, action) => {\n      console.log(action.payload, \"edit\");\n      state = state.music.map((i) =>\n        i.id === action.payload.id ? action.payload : i\n      );\n      return state;\n    },\n    getMusicError: (state, action) => {\n      state.isLoading = false;\n    },\n  },\n});\nexport const {\n  getMusicFetch,\n  deleteMusicSlice,\n  editMusicSlice,\n  getMusicSuccess,\n  getMusicError,\n} = musicSlice.actions;\nexport default musicSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AACvD,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EACpCG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACH,SAAS,GAAG,IAAI;IACxB,CAAC;IACDK,eAAe,EAAEA,CAACF,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDC,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACnCI,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;MAClB,IAAIO,CAAC,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACR,MAAM,CAACE,OAAO,EAAE,CAAC,CAAC;MAC7CE,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;MACd,OAAOP,KAAK;IACd,CAAC;IACDU,cAAc,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACjCI,OAAO,CAACC,GAAG,CAACL,MAAM,CAACE,OAAO,EAAE,MAAM,CAAC;MACnCH,KAAK,GAAGA,KAAK,CAACJ,KAAK,CAACe,GAAG,CAAEC,CAAC,IACxBA,CAAC,CAACC,EAAE,KAAKZ,MAAM,CAACE,OAAO,CAACU,EAAE,GAAGZ,MAAM,CAACE,OAAO,GAAGS,CAAC,CAChD;MACD,OAAOZ,KAAK;IACd,CAAC;IACDc,aAAa,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACH,SAAS,GAAG,KAAK;IACzB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EACXE,aAAa;EACbK,gBAAgB;EAChBM,cAAc;EACdR,eAAe;EACfY;AACF,CAAC,GAAGrB,UAAU,CAACsB,OAAO;AACtB,eAAetB,UAAU,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}