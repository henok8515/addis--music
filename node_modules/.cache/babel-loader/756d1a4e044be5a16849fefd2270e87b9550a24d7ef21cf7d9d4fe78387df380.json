{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { deleteMusicByIdAPI, updateMusicAPI } from \"../../api\";\nimport { getMusicSuccess, deleteMusicSlice, editMusicSlice } from \"../../features/music/musicSlice\";\nimport { DELETE_MUSIC, GET_MUSIC, UPDATE_MUSIC } from \"../../types\";\nfunction* getFetchedMusic() {\n  const music = yield call(() => fetch(\"http://localhost:5000/\"));\n  const formattedData = yield music.json();\n  yield put(getMusicSuccess(formattedData));\n}\nexport function* deleteUserByIdSaga(action) {\n  yield deleteMusicByIdAPI(action.id);\n  yield put(deleteMusicSlice(action.id));\n}\nexport function* updateMusic(action) {\n  yield updateMusicAPI(action.updatedMusic);\n  yield put(editMusicSlice(action.user));\n}\nfunction* musicSaga() {\n  yield takeEvery(\"music/getMusicFetch\", getFetchedMusic);\n  yield takeEvery(GET_MUSIC, getFetchedMusic);\n  yield takeEvery(DELETE_MUSIC, deleteMusicByIdAPI);\n  yield takeEvery(UPDATE_MUSIC, updateMusic);\n}\nexport default musicSaga;","map":{"version":3,"names":["call","put","takeEvery","deleteMusicByIdAPI","updateMusicAPI","getMusicSuccess","deleteMusicSlice","editMusicSlice","DELETE_MUSIC","GET_MUSIC","UPDATE_MUSIC","getFetchedMusic","music","fetch","formattedData","json","deleteUserByIdSaga","action","id","updateMusic","updatedMusic","user","musicSaga"],"sources":["/home/henok/projects/addis-music/client/src/redux/saga/musicSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { deleteMusicByIdAPI, updateMusicAPI } from \"../../api\";\nimport {\n  getMusicSuccess,\n  deleteMusicSlice,\n  editMusicSlice,\n} from \"../../features/music/musicSlice\";\nimport { DELETE_MUSIC, GET_MUSIC, UPDATE_MUSIC } from \"../../types\";\nfunction* getFetchedMusic() {\n  const music = yield call(() => fetch(\"http://localhost:5000/\"));\n  const formattedData = yield music.json();\n  yield put(getMusicSuccess(formattedData));\n}\nexport function* deleteUserByIdSaga(action) {\n  yield deleteMusicByIdAPI(action.id);\n  yield put(deleteMusicSlice(action.id));\n}\nexport function* updateMusic(action) {\n  yield updateMusicAPI(action.updatedMusic);\n  yield put(editMusicSlice(action.user));\n}\nfunction* musicSaga() {\n  yield takeEvery(\"music/getMusicFetch\", getFetchedMusic);\n  yield takeEvery(GET_MUSIC, getFetchedMusic);\n  yield takeEvery(DELETE_MUSIC, deleteMusicByIdAPI);\n  yield takeEvery(UPDATE_MUSIC, updateMusic);\n}\nexport default musicSaga;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,WAAW;AAC9D,SACEC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,QACT,iCAAiC;AACxC,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,QAAQ,aAAa;AACnE,UAAUC,eAAeA,CAAA,EAAG;EAC1B,MAAMC,KAAK,GAAG,MAAMZ,IAAI,CAAC,MAAMa,KAAK,CAAC,wBAAwB,CAAC,CAAC;EAC/D,MAAMC,aAAa,GAAG,MAAMF,KAAK,CAACG,IAAI,EAAE;EACxC,MAAMd,GAAG,CAACI,eAAe,CAACS,aAAa,CAAC,CAAC;AAC3C;AACA,OAAO,UAAUE,kBAAkBA,CAACC,MAAM,EAAE;EAC1C,MAAMd,kBAAkB,CAACc,MAAM,CAACC,EAAE,CAAC;EACnC,MAAMjB,GAAG,CAACK,gBAAgB,CAACW,MAAM,CAACC,EAAE,CAAC,CAAC;AACxC;AACA,OAAO,UAAUC,WAAWA,CAACF,MAAM,EAAE;EACnC,MAAMb,cAAc,CAACa,MAAM,CAACG,YAAY,CAAC;EACzC,MAAMnB,GAAG,CAACM,cAAc,CAACU,MAAM,CAACI,IAAI,CAAC,CAAC;AACxC;AACA,UAAUC,SAASA,CAAA,EAAG;EACpB,MAAMpB,SAAS,CAAC,qBAAqB,EAAES,eAAe,CAAC;EACvD,MAAMT,SAAS,CAACO,SAAS,EAAEE,eAAe,CAAC;EAC3C,MAAMT,SAAS,CAACM,YAAY,EAAEL,kBAAkB,CAAC;EACjD,MAAMD,SAAS,CAACQ,YAAY,EAAES,WAAW,CAAC;AAC5C;AACA,eAAeG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}